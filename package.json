{
  "name": "mercury-extension",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "amplitude-js": "^4.2.1",
    "axios": "^0.17.1",
    "axios-retry": "^3.0.2",
    "babel-cli": "^6.26.0",
    "babel-preset-es2015": "^6.24.1",
    "debounce": "^1.1.0",
    "diffparser": "^2.0.1",
    "js-base64": "^2.4.3",
    "jsonwebtoken": "^8.1.1",
    "moment": "^2.20.1",
    "parse-link-header": "^1.0.1",
    "pjax": "https://github.com/karigari/pjax.git#karigari",
    "raven-js": "^3.23.3",
    "react": "^16.2.0",
    "react-component-octicons": "^1.5.0",
    "react-dom": "^16.2.0",
    "react-markdown": "^3.3.0",
    "react-redux": "^5.0.6",
    "react-rnd": "^7.4.0",
    "react-scripts": "1.1.3",
    "react-syntax-highlighter": "^7.0.0",
    "redux": "^3.7.2",
    "redux-create-reducer": "^1.1.1",
    "redux-promise-middleware": "^5.0.0",
    "redux-thunk": "^2.2.0",
    "shelljs": "^0.8.1",
    "status-indicator": "^1.0.9",
    "websocket-as-promised": "^0.6.0"
  },
  "config": {
    "pack": "build/. -p keys/local_key.pem -o dist/mercury.crx"
  },
  "scripts": {
    "start": "BROWSER=none react-app-rewired start",
    "start-staging": "BROWSER=none REACT_APP_BACKEND_ENV=staging npm run start",
    "start-local": "BROWSER=none REACT_APP_BACKEND_ENV=local npm run start",
    "build": "react-app-rewired build && node scripts/helpers.js",
    "gen-crx": "./node_modules/.bin/crx pack $npm_package_config_pack",
    "pack": "npm run build && mkdir -p dist/ && npm run gen-crx",
    "test": "TEST=true react-app-rewired test --env=jsdom",
    "sentry": "sh scripts/sentry.sh",
    "gen-zip": "rm -f bundle.zip && zip -r9 bundle.zip build/* -x *.map",
    "chrome-build": "REACT_APP_CHROME_ZIP=true npm run build && npm run gen-zip && npm run sentry",
    "eject": "react-app-rewired eject"
  },
  "devDependencies": {
    "crx": "^3.2.1",
    "jest-mock-axios": "^2.1.11",
    "react-app-rewired": "^1.4.1",
    "redux-mock-store": "^1.5.1",
    "redux-testkit": "^1.0.6",
    "write-file-webpack-plugin": "^4.2.0"
  },
  "jest": {
    "collectCoverage": true
  }
}
